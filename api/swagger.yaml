openapi: 3.0.3
info:
  title: CJ
  description: "Social Network VK"
  version: 0.0.1
servers:
  - url: /api
security:
  - CookieAuth: []

paths:
  /auth/signup:
    post:
      tags:
        - Authorization
      summary: Signup user
      security: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupUserRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignupUserResponse"

  /auth/login:
    post:
      tags:
        - Authorization
      summary: Login user
      security: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginUserResponse"

  /auth/logout:
    delete:
      tags:
        - Authorization
      summary: Logout user
      security: []
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"

  /user/get:
    get:
      tags:
        - User
      summary: Get user data
      security: []
      parameters:
        - $ref: "#/components/parameters/userIDParam"
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse"

  /user/posts:
    get:
      tags:
        - User
      summary: Get user's posts
      parameters:
        - $ref: "#/components/parameters/userIDParam"
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserPostsResponse"

  /post/create:
    post:
      tags:
        - Post
      summary: Create new post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePostRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePostResponse"

  /post/delete:
    delete:
      tags:
        - Post
      summary: Delete post
      parameters:
        - $ref: "#/components/parameters/postIDParam"
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"

  /post/edit:
    put:
      tags:
        - Post
      summary: Edit post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostEditRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostEditResponse"

  /post/get:
    get:
      tags:
        - Post
      summary: Get post
      parameters:
        - $ref: "#/components/parameters/postIDParam"
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPostResponse"
components:
  parameters:
    userIDParam:
      in: query
      name: user_id
      required: false
      schema:
        type: string
      description: On empty user_id currently authorized user's id is used

    postIDParam:
      in: query
      name: post_id
      required: true
      schema:
        type: string

  securitySchemes:
    CookieAuth:
      type: apiKey
      in: cookie
      name: AuthToken

  schemas:
    # -------------------------------- Requests -------------------------------- #

    SignupUserRequest:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/UserName"
        email:
          type: string
          example: mail@example.com
        password:
          type: string
          example: password

    SignupUserResponse:
      $ref: "#/components/schemas/BasicResponse"

    LoginUserRequest:
      type: object
      properties:
        email:
          type: string
          example: mail@example.com
        password:
          type: string
          example: password

    LoginUserResponse:
      $ref: "#/components/schemas/BasicResponse"

    GetUserResponse:
      $ref: "#/components/schemas/User"

    GetUserPostsResponse:
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: "#/components/schemas/Post"

    CreatePostRequest:
      type: object
      properties:
        message:
          type: string
          example: This is my new post
        images:
          type: array
          items:
            type: string
            example: src/image.jpg

    CreatePostResponse:
      $ref: "#/components/schemas/Post"

    PostEditRequest:
      type: object
      properties:
        post_id:
          type: string
        message:
          type: string
          example: This is my new post
        images:
          type: array
          items:
            type: string
            example: src/image.jpg

    PostEditResponse:
      $ref: "#/components/schemas/Post"

    GetPostResponse:
      $ref: "#/components/schemas/Post"

    # -------------------------------- Models -------------------------------- #

    BasicResponse:
      type: object

    User:
      type: object
      properties:
        id:
          type: string
        name:
          $ref: "#/components/schemas/UserName"
        email:
          type: string
          example: mail@example.com

    UserName:
      type: object
      properties:
        first:
          type: string
          example: John
        last:
          type: string
          example: Doe

    Post:
      type: object
      properties:
        author_id:
          type: string
        post_id:
          type: string
        message:
          type: string
        images:
          type: array
          items:
            type: string
